@import url(https://fonts.googleapis.com/css?family=Rubik:regular,700);@import url(https://fonts.googleapis.com/css?family=Raleway:700,800);*{padding:0;margin:0;border:0}*,:after,:before{-webkit-box-sizing:border-box;box-sizing:border-box}aside,footer,header,nav,section{display:block}body,html{height:100%;min-width:320px}html{font-size:.75rempx}body{line-height:1;font-family:"Rubik";-ms-text-size-adjust:100%;-moz-text-size-adjust:100%;-webkit-text-size-adjust:100%;color:#616161;font-style:normal;font-weight:400}button,input,textarea{font-family:"Rubik";font-size:inherit}input::-ms-clear{display:none}button{cursor:pointer;background-color:inherit}button::-moz-focus-inner{padding:0;border:0}a,a:hover,a:visited{text-decoration:none}ul li{list-style:none}img{vertical-align:top}h1,h2,h3,h4,h5,h6{font-weight:inherit;font-size:inherit}body.--lock{overflow:hidden;-ms-touch-action:none;touch-action:none}.wrapper{min-height:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;overflow:hidden}.wrapper>*{min-width:0}.container{margin:0 auto;max-width:1110px;padding:20px}.page{-webkit-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto}[class*=" _icon-"]:before,[class^=_icon-]:before{font-family:"icons";font-style:normal;font-weight:400;font-variant:normal;text-transform:none;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;display:block}.header{position:absolute;width:100%;top:0;left:0;z-index:30}.header__container{position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;min-height:114px}.header__menu{-webkit-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto}.header__button{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-flex:0;-ms-flex:0 0 252px;flex:0 0 252px;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end}.menu__button{display:none}.menu__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-wrap:wrap;flex-wrap:wrap;padding:0 15px 0 0}.menu__item{margin:0 30px 0 0}.btn,.menu__link{font-family:Raleway;line-height:1.2;text-transform:uppercase}.menu__link{padding:10px;font-weight:700;font-size:10px;color:#000}.menu__link:hover{text-decoration:underline}.btn{display:inline-block;color:#fcfdfe;font-style:normal;font-weight:800;font-size:.625rem;padding:14px 30px;letter-spacing:.14em;border-radius:5px;background-color:#ec5863;-webkit-transition:background-color .3s ease 0s;-o-transition:background-color .3s ease 0s;transition:background-color .3s ease 0s}.btn:hover{background-color:#cc3f48}.btn--blue{background-color:#4285f4}.btn--blue:hover{background-color:#4a4ad6}.btn--red,.main-screen::before{background-color:#ec5863}.main-screen{padding:150px 0 50px;position:relative;margin:0 0 40px}.main-screen::before{content:"";position:absolute;width:100vw;height:100%;top:-20px;right:255px;border-radius:20px 0 0 20px;-webkit-transform:translate(100%,0);-ms-transform:translate(100%,0);transform:translate(100%,0)}.main-screen__content{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap}.main-screen__img-block{position:relative;-webkit-box-flex:0;-ms-flex:0 1 52%;flex:0 1 52%}.main-screen__img{max-width:100%}.main-screen__text{margin:70px 0 128px;-webkit-box-flex:0;-ms-flex:0 1 48%;flex:0 1 48%}.main-screen__play{max-width:410px}.title-block__title{font-weight:700;font-size:2.75rem;color:#000;line-height:1.25;max-width:497px}.title-block__title:not(:last-child){margin:0 0 12px}.title-block__decor{color:#ec5863}.title-block__decor--blue{color:#4285f4}.title-block__text{color:#616161;font-size:12px;line-height:1.3;letter-spacing:.08em;max-width:375px}.title-block__text:not(:last-child){margin:0 0 24px}.play-block__play{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.play-block__text-block{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:0 0 0 20px}.play-block__title{font-size:.8125rem;line-height:1.2;color:#b0b0b0;margin:0 0 2px}.play-block__text{font-size:9px;line-height:1.2;letter-spacing:.165em;text-transform:uppercase;color:#000}.play-block__img{-webkit-box-flex:0;-ms-flex:0 0 44px;flex:0 0 44px}.footer__wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.footer__button:first-child{margin-right:75px}.platform-block__wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;padding:40px 0;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.platform-block__media{padding:0 0 0 47px;margin:0 187px 0 0}.platform-block__text{margin:0 0 40px}.platform-block__img{max-width:100%}.platform-block__img-block{width:338px}.experts-block{padding:103px 0 116px}.experts-block__text{max-width:400px;-webkit-box-flex:0;-ms-flex:0 1 50%;flex:0 1 50%;padding:0 20px 0 0}.experts-block__content{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.experts-block__video{position:relative;-webkit-box-flex:0;-ms-flex:0 1 50%;flex:0 1 50%;padding:0 0 30%}.experts-block__youtube{position:absolute;height:100%;width:100%;-o-object-fit:cover;object-fit:cover;top:0;left:0;-webkit-box-shadow:0 4px 18px rgba(88,126,236,.18);box-shadow:0 4px 18px rgba(88,126,236,.18);border-radius:8px;overflow:hidden}.statistics-experts{position:relative;max-width:655px;margin:0 auto}.statistics-experts__block{padding:25px 80px;display:-webkit-box;display:-ms-flexbox;display:flex;background:#fff;-webkit-box-shadow:0 2px 24px rgba(88,126,236,.15);box-shadow:0 2px 24px rgba(88,126,236,.15);border-radius:16px;position:relative;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;z-index:5;margin:0 0 110px}.statistics-experts__item{-webkit-box-flex:0;-ms-flex:0 1 25%;flex:0 1 25%;text-align:center}.statistics-experts__value{font-weight:700;font-size:2.25rem;line-height:1.19;letter-spacing:.14em;color:#ec5863}.statistics-experts__text{font-weight:700;font-size:.6875rem;line-height:1.18;letter-spacing:.37em;text-transform:uppercase;color:#000}.statistics-experts__decor{position:absolute;border-radius:30px;background-color:#ec5863}.statistics-experts__decor--decor-1{width:65px;height:65px;-webkit-transform:rotate(-30deg);-ms-transform:rotate(-30deg);transform:rotate(-30deg);bottom:-21px;left:-21px;border-radius:16px}.statistics-experts__decor--decor-2{width:96px;height:96px;-webkit-transform:rotate(-105deg);-ms-transform:rotate(-105deg);transform:rotate(-105deg);right:50%;top:-40px}.statistics-experts__decor--decor-3{width:127px;height:127px;left:90%;top:10%;-webkit-transform:rotate(-30deg);-ms-transform:rotate(-30deg);transform:rotate(-30deg)}.features,.features__text{margin:0 0 50px}.features__block{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap}.features__item{-webkit-box-flex:0;-ms-flex:0 0 33.333%;flex:0 0 33.333%;padding:0 36px;-ms-flex-wrap:wrap;flex-wrap:wrap}.features__item-wrapper{height:100%;background:#fff;-webkit-box-shadow:0 4px 18px rgba(88,126,236,.18);box-shadow:0 4px 18px rgba(88,126,236,.18);border-radius:8px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;text-align:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:35px 17px}.features__text-block,.features__title{line-height:1.3;text-align:center;letter-spacing:.08em}.features__title{font-weight:700;font-size:16px;color:#000}.features__text-block{font-size:12px;color:#616161}.features__img-block{text-align:center;margin:0 0 62px}@media (max-width:1057px){.features__item{padding:0 20px}}@media (max-width:640px){.statistics-experts__value{font-size:1.5625rem}}@media (max-width:560px){.statistics-experts__block{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.statistics-experts__item:not(:last-child){margin:0 0 15px}}@media (max-width:530px){.header__logo img{display:none}}@media (max-width:61.99875em){.header__container{min-height:80px}.header__button{-webkit-box-flex:0;-ms-flex:0 0 170px;flex:0 0 170px}.main-screen{margin:0 0 20px}.main-screen::before{right:220px}.platform-block__media{margin:0 100px 0 0}.platform-block__img-block{width:100%}.features__item{-webkit-box-flex:0;-ms-flex:0 0 100%;flex:0 0 100%;margin:0 0 20px}}@media (max-width:47.99875em){.header__button{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;position:relative;left:-100px}.menu__body{height:100%;width:100%;top:0;left:-100%;position:fixed;background-color:rgba(0,0,0,.9);z-index:10;-webkit-transition:left .3s ease 0;-o-transition:left .3s ease 0;transition:left .3s ease 0;overflow:auto}.menu__body.--active{left:0}.menu__button{display:block;height:18px;width:30px;z-index:50;position:relative;cursor:pointer;top:-5px;left:-20px}.menu__button span,.menu__button::after,.menu__button::before{left:0;position:absolute;height:10%;width:100%;-webkit-transition:all .3s ease 0s;-o-transition:all .3s ease 0s;transition:all .3s ease 0s;background-color:#cc3f48}.menu__button::after,.menu__button::before{content:""}.menu__button::before{top:0}.menu__button::after{bottom:0}.menu__button span{top:50%;-webkit-transform:scale(1) translate(0,-50%);-ms-transform:scale(1) translate(0,-50%);transform:scale(1) translate(0,-50%)}.menu__button.--active span{-webkit-transform:scale(0) translate(0,-50%);-ms-transform:scale(0) translate(0,-50%);transform:scale(0) translate(0,-50%)}.menu__button.--active::before{top:50%;-webkit-transform:rotate(-45deg) translate(0,-50%);-ms-transform:rotate(-45deg) translate(0,-50%);transform:rotate(-45deg) translate(0,-50%)}.menu__button.--active::after{bottom:50%;-webkit-transform:rotate(45deg) translate(0,50%);-ms-transform:rotate(45deg) translate(0,50%);transform:rotate(45deg) translate(0,50%)}.menu__list{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:0;margin:170px 0 0}.menu__item{margin:0 0 60px}.menu__link{color:#fff;padding:30px 0;font-size:1.25rem}.main-screen::before{display:none}.main-screen__content{margin:0 0 20px}.main-screen__img-block,.main-screen__text{-webkit-box-flex:1;-ms-flex:1 1 100%;flex:1 1 100%;text-align:center}.main-screen__text{margin:0 0 40px}.title-block__text,.title-block__title{max-width:none}.footer__wrapper{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.footer__button:first-child{margin-right:0}.platform-block__wrapper{-webkit-box-orient:vertical;-webkit-box-direction:reverse;-ms-flex-direction:column-reverse;flex-direction:column-reverse}.platform-block__media{margin:0;padding:0}.platform-block__text{text-align:center}.experts-block__text{-webkit-box-flex:1;-ms-flex:1 1 100%;flex:1 1 100%;margin:0 0 40px;text-align:center;max-width:100%}.experts-block__content{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:stretch;-ms-flex-align:stretch;align-items:stretch}.experts-block__video{padding:0 0 58%}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */